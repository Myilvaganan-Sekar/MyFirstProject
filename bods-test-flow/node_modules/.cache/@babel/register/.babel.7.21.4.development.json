{"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\myilvaganan.sekar.SUTRIXMEDIA1\\\\Bods-US\\\\sutrix-test-flow\\\\node_modules\\\\@wdio\\\\codemod\\\\async\\\\\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\myilvaganan.sekar.SUTRIXMEDIA1\\\\Bods-US\\\\sutrix-test-flow\",\"filename\":\"C:\\\\Users\\\\myilvaganan.sekar.SUTRIXMEDIA1\\\\Bods-US\\\\sutrix-test-flow\\\\node_modules\\\\@wdio\\\\codemod\\\\async\\\\index.js\",\"targets\":{},\"cloneInputAst\":true,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\myilvaganan.sekar.SUTRIXMEDIA1\\\\Bods-US\\\\sutrix-test-flow\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{},\"externalDependencies\":[]},{\"key\":\"transform-flow-strip-types\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]},\"ImportDeclaration\":{\"enter\":[null,null]},\"ClassPrivateProperty\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"TypeCastExpression\":{\"enter\":[null,null]},\"CallExpression\":{\"enter\":[null]},\"OptionalCallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"ImportSpecifier\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"AnyTypeAnnotation\":{\"enter\":[null]},\"ArrayTypeAnnotation\":{\"enter\":[null]},\"BooleanTypeAnnotation\":{\"enter\":[null]},\"BooleanLiteralTypeAnnotation\":{\"enter\":[null]},\"NullLiteralTypeAnnotation\":{\"enter\":[null]},\"ClassImplements\":{\"enter\":[null]},\"DeclareClass\":{\"enter\":[null]},\"DeclareFunction\":{\"enter\":[null]},\"DeclareInterface\":{\"enter\":[null]},\"DeclareModule\":{\"enter\":[null]},\"DeclareModuleExports\":{\"enter\":[null]},\"DeclareTypeAlias\":{\"enter\":[null]},\"DeclareOpaqueType\":{\"enter\":[null]},\"DeclareVariable\":{\"enter\":[null]},\"DeclareExportDeclaration\":{\"enter\":[null]},\"DeclareExportAllDeclaration\":{\"enter\":[null]},\"DeclaredPredicate\":{\"enter\":[null]},\"ExistsTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeParam\":{\"enter\":[null]},\"GenericTypeAnnotation\":{\"enter\":[null]},\"InferredPredicate\":{\"enter\":[null]},\"InterfaceExtends\":{\"enter\":[null]},\"InterfaceDeclaration\":{\"enter\":[null]},\"InterfaceTypeAnnotation\":{\"enter\":[null]},\"IntersectionTypeAnnotation\":{\"enter\":[null]},\"MixedTypeAnnotation\":{\"enter\":[null]},\"EmptyTypeAnnotation\":{\"enter\":[null]},\"NullableTypeAnnotation\":{\"enter\":[null]},\"NumberLiteralTypeAnnotation\":{\"enter\":[null]},\"NumberTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeInternalSlot\":{\"enter\":[null]},\"ObjectTypeCallProperty\":{\"enter\":[null]},\"ObjectTypeIndexer\":{\"enter\":[null]},\"ObjectTypeProperty\":{\"enter\":[null]},\"ObjectTypeSpreadProperty\":{\"enter\":[null]},\"OpaqueType\":{\"enter\":[null]},\"QualifiedTypeIdentifier\":{\"enter\":[null]},\"StringLiteralTypeAnnotation\":{\"enter\":[null]},\"StringTypeAnnotation\":{\"enter\":[null]},\"SymbolTypeAnnotation\":{\"enter\":[null]},\"ThisTypeAnnotation\":{\"enter\":[null]},\"TupleTypeAnnotation\":{\"enter\":[null]},\"TypeofTypeAnnotation\":{\"enter\":[null]},\"TypeAlias\":{\"enter\":[null]},\"TypeAnnotation\":{\"enter\":[null]},\"TypeParameter\":{\"enter\":[null]},\"TypeParameterDeclaration\":{\"enter\":[null]},\"TypeParameterInstantiation\":{\"enter\":[null]},\"UnionTypeAnnotation\":{\"enter\":[null]},\"Variance\":{\"enter\":[null]},\"VoidTypeAnnotation\":{\"enter\":[null]},\"EnumDeclaration\":{\"enter\":[null]},\"EnumBooleanBody\":{\"enter\":[null]},\"EnumNumberBody\":{\"enter\":[null]},\"EnumStringBody\":{\"enter\":[null]},\"EnumSymbolBody\":{\"enter\":[null]},\"EnumBooleanMember\":{\"enter\":[null]},\"EnumNumberMember\":{\"enter\":[null]},\"EnumStringMember\":{\"enter\":[null]},\"EnumDefaultedMember\":{\"enter\":[null]},\"IndexedAccessType\":{\"enter\":[null]},\"OptionalIndexedAccessType\":{\"enter\":[null]},\"ExportAllDeclaration\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"syntax-class-static-block\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-private-property-in-object\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-class-properties\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-numeric-separator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-nullish-coalescing-operator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-chaining\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.21.4:development":{"value":{"code":"\"use strict\";\n\nconst compilers = require(`../common/compilers`);\nconst {\n  EXTRA_COMMANDS,\n  HOOKS,\n  JS_BUILT_IN,\n  EXCLUDE_OBJECTS,\n  EXCLUDE_METHODS,\n  AWAIT_CUSTOM_GETTERS\n} = require(`./constants`);\n\n// Exclude await if already await'ed, a return line or for of loop\nconst excludeAsyncWrap = path => {\n  const excludes = [`AwaitExpression`, `ReturnStatement`, `ForOfStatement`];\n  const parent_type = path.parent.value.type;\n  if (excludes.includes(parent_type)) {\n    return true;\n  }\n};\n\n// Don't await certain functions and methods\nconst excludeAsyncCustom = test_object => {\n  if (!test_object) {\n    return false;\n  }\n\n  // Add to this array when more come up\n  if ([`moment`].includes(test_object.name)) {\n    return true;\n  }\n  return excludeAsyncCustom(test_object.callee || test_object.object);\n};\n\n// Checks if a parent node is browser.execute\nconst insideExecute = parent => {\n  if (!parent || !parent.value) {\n    return false;\n  }\n  const value = parent.value;\n  if (\n  // Plain browser.execute without the return value being assigned\n  value.expression && value.expression.argument && value.expression.argument.callee && value.expression.argument.callee.object && value.expression.argument.callee.object.name === `browser` && value.expression.argument.callee.property.name === `execute` ||\n  // browser.execute with variable declarator\n  // e.g. const foo = browser.execute();\n\n  value.type === `VariableDeclarator` && value.init && value.init.argument && value.init.argument.callee && value.init.argument.callee.object && value.init.argument.callee.object.name === `browser` && value.init.argument.callee.property.name === `execute` ||\n  // browser.execute with return\n\n  value.type === `ReturnStatement` && value.argument && value.argument.callee && value.argument.callee.object && value.argument.callee.object.name === `browser` && value.argument.callee.property.name === `execute` ||\n  // With assignemnt but not declarating a variable\n  // e.g. foo = browser.execute();\n\n  value.type === `AssignmentExpression` && value.right.argument && value.right.argument.callee && value.right.argument.callee.object && value.right.argument.callee.object.name === `browser` && value.right.argument.callee.property.name === `execute`) {\n    return true;\n  }\n  if (!parent.parentPath) {\n    return false;\n  }\n  return insideExecute(parent.parentPath);\n};\nmodule.exports = function transformer(file, api, opts) {\n  const j = api.jscodeshift;\n  const root = j(file.source);\n  const auto_compile_opts = compilers.remove(j, root, opts);\n\n  // Convert forEach to regular for loops\n  root.find(j.CallExpression, {\n    callee: {\n      property: {\n        name: \"forEach\"\n      }\n    }\n  }).replaceWith(path => {\n    const args = path.value.arguments[0];\n    const body = args.body;\n    const multiple_params = args.params && args.params.length > 1;\n    const random = Math.floor(Math.random() * 10000);\n    const placeholder = `codemod_placeholder_${random}`;\n    const left_placeholder = `left_placeholder_${random}`;\n    let expression = null;\n    let block_statement = null;\n    let declarator = null;\n\n    // Check if we need to add an extra varaible above the for loop\n    // Cases when $$() appears\n    // AST explorer saw this as an error .. for await (const foo of $$(`.bar`))\n    let placeholder_variable = false;\n\n    // foo.forEach()\n    if (path.value.callee.object.name) {\n      if (multiple_params) {\n        expression = j.callExpression(j.memberExpression(path.value.callee.object, j.identifier(`entries`)), []);\n      } else {\n        expression = j.identifier(path.value.callee.object.name);\n      }\n    }\n    // [1,3].forEach()\n    else if (path.value.callee.object.elements) {\n      if (multiple_params) {\n        expression = j.callExpression(j.memberExpression(j.arrayExpression(path.value.callee.object.elements), j.identifier(`entries`)), []);\n      } else {\n        expression = j.arrayExpression(path.value.callee.object.elements);\n      }\n    }\n    // foo.bar.forEach()\n    // @todo This could recurse to go deeper but not going to worry about it now\n    else if (path.value.callee.object.object) {\n      if (multiple_params) {\n        expression = j.callExpression(j.memberExpression(path.value.callee.object, j.identifier(`entries`)), []);\n      } else {\n        expression = j.memberExpression(path.value.callee.object.object, path.value.callee.object.property);\n      }\n    }\n    // $$(`.foo`).forEach() or abc.abs(1,6).forEach()\n    else {\n      placeholder_variable = true;\n      if (multiple_params) {\n        expression = j.callExpression(j.memberExpression(j.identifier(placeholder), j.identifier(`entries`)), []);\n      } else {\n        expression = j.identifier(placeholder);\n      }\n    }\n\n    // foo.forEach(bar());\n    if (!body) {\n      block_statement = j.blockStatement([j.expressionStatement(path.value.arguments[0])]);\n    }\n    // General forEach\n    else if (body.type === `BlockStatement`) {\n      block_statement = body;\n    }\n    // foo.forEach(num => num) single line forEach\n    else {\n      block_statement = j.blockStatement([j.expressionStatement(body)]);\n    }\n\n    // foo.forEach(bar());\n    if (!args.params) {\n      declarator = [j.variableDeclarator(j.identifier(`foo`), null)];\n    }\n    // Array of objects\n    else if (args.params[0] && args.params[0].properties) {\n      declarator = [j.variableDeclarator(j.objectPattern(args.params[0].properties), null)];\n    }\n    // [1,2].forEach((num, index) => console.log(num, index)});\n    // Reverse the order of the arguments in forEach so the match what is used in .entries()\n    else if (multiple_params) {\n      declarator = [j.variableDeclarator(j.arrayPattern(args.params.reverse()))];\n    }\n    // Anything else\n    else {\n      declarator = args.params;\n    }\n    const for_statement = j.forOfStatement(j.variableDeclaration(\"const\", declarator.length ? declarator : [j.identifier(left_placeholder)]), expression, block_statement);\n    if (placeholder_variable) {\n      const varaible_declaration = j.variableDeclaration('let', [j.variableDeclarator(j.identifier(placeholder), path.value.callee.object)]);\n      return j.program([varaible_declaration, for_statement]);\n    }\n    return for_statement;\n  });\n\n  // Transforms all hooks/it's parameter to async\n  HOOKS.forEach(name => {\n    root.find(j.CallExpression, {\n      callee: {\n        name\n      }\n    }).replaceWith(path => {\n      const index = [`it`, `xit`, `test`, `describe`, `xdescribe`, `When`, `Given`, `Then`, `Before`, `BeforeStep`].includes(name) ? 1 : 0;\n      if (path.value.arguments[index] && path.value.arguments[index].type === `ArrowFunctionExpression`) {\n        path.value.arguments[index].async = true;\n      }\n      return path.value;\n    });\n  });\n\n  // Wrap all .map in Promise.all\n  root.find(j.CallExpression, {\n    callee: {\n      property: {\n        name: `map`\n      }\n    }\n  }).replaceWith(path => {\n    // If map has already been wrapped in a Promise then don't do anything\n    if (path.parent.value.callee && path.parent.value.callee.object && path.parent.value.callee.object.name === `Promise`) {\n      return path.value;\n    }\n    const expression = j.callExpression(j.memberExpression(j.identifier(`Promise`), j.identifier(`all`)), [j.callExpression(path.value.callee, path.value.arguments)]);\n    return expression;\n  });\n\n  // Transform waitUnitl, map, etc.\n  EXTRA_COMMANDS.forEach(name => {\n    root.find(j.CallExpression, {\n      callee: {\n        property: {\n          name\n        }\n      }\n    }).replaceWith(path => {\n      // Don't do\n      // [...Array(num_users)].some(() => ({ ...options }));\n      if (path.value.arguments[0].body && ![`ObjectExpression`].includes(path.value.arguments[0].body.type)) {\n        path.value.arguments[0].async = true;\n      }\n      return path.value;\n    });\n  });\n\n  // Handle $$\n  root.find(j.CallExpression, {\n    callee: {\n      name: `$$`\n    }\n  }).replaceWith(path => {\n    if (excludeAsyncWrap(path)) {\n      return path.value;\n    }\n    return {\n      type: `AwaitExpression`,\n      argument: path.value\n    };\n  });\n\n  // Add await to all calls to class methods\n  // This will handle chained methods\n  // E.g. LoginPage.login()\n  // @todo This could be too generic. It can pick up methods that don't need await on them\n  root.find(j.CallExpression, {\n    callee: {\n      type: `MemberExpression`,\n      property: {\n        type: `Identifier`\n      }\n    }\n  }).replaceWith(path => {\n    if (excludeAsyncWrap(path) || insideExecute(path.parentPath)) {\n      return path.value;\n    }\n\n    // Need to make sure to include expect here\n    const checks = [...JS_BUILT_IN, ...EXCLUDE_OBJECTS, ...EXCLUDE_METHODS].filter(word => ![`expect`, `expectChai`].includes(word));\n\n    // Exclude any built in javascipt functions\n    if (checks.includes(path.value.callee.property.name) || checks.includes(path.value.callee.object.name)) {\n      return path.value;\n    }\n    if (path.value.callee && path.value.callee.object.callee && checks.includes(path.value.callee.object.callee.name)) {\n      return path.value;\n    }\n\n    // Exclude certing things like moment\n    // Examples below:\n    // current_date = moment(current_date, `MM/DD/YYYY`).add(1, `days`).format(`MM/DD/YYYY`);\n    // dates.push(moment(current_date, `MM/DD/YYYY`).format(format_to_return));\n    if (excludeAsyncCustom(path.value.callee.object)) {\n      return path.value;\n    }\n    return {\n      type: `AwaitExpression`,\n      argument: path.value\n    };\n  });\n\n  // foo();\n  root.find(j.CallExpression, {\n    callee: {\n      type: `Identifier`\n    }\n  }).replaceWith(path => {\n    const callee_name = path.value.callee.name;\n    const checks = [...JS_BUILT_IN, ...EXCLUDE_OBJECTS, ...HOOKS, ...[`$`, `$$`]];\n    if (excludeAsyncWrap(path) || insideExecute(path.parentPath) || checks.includes(callee_name)) {\n      return path.value;\n    }\n    return {\n      type: `AwaitExpression`,\n      argument: path.value\n    };\n  });\n  AWAIT_CUSTOM_GETTERS.forEach(name => {\n    root.find(j.MemberExpression, {\n      property: {\n        name\n      }\n    }).replaceWith(path => {\n      if (!path.value.object.name || excludeAsyncWrap(path)) {\n        return path.value;\n      }\n      const object_start = path.value.object.name.charAt(0);\n\n      // Check that the object starts with an uppercase character\n      // If it's not uppercase it's likely not what we want\n      if (object_start !== object_start.toUpperCase()) {\n        return path.value;\n      }\n      return {\n        type: `AwaitExpression`,\n        argument: path.value\n      };\n    });\n  });\n  root.find(j.MemberExpression, {\n    property: {\n      name: `selector`\n    }\n  }).replaceWith(path => {\n    if (excludeAsyncWrap(path) ||\n    // Don't convert things like this.selector since it's likely not what we're looking for\n    path.value.object && path.value.object.type === `ThisExpression`) {\n      return path.value;\n    }\n    return {\n      type: `AwaitExpression`,\n      argument: path.value\n    };\n  });\n\n  // Set all method definitions to async. excludes \"get\", \"set\"\n  root.find(j.MethodDefinition, {\n    kind: `method`\n  }).replaceWith(path => {\n    if (EXCLUDE_METHODS.includes(path.value.key.name)) {\n      return path.value;\n    }\n    path.value.value.async = true;\n    return path.value;\n  });\n\n  // Set all method definitions to async. excludes \"get\", \"set\"\n  // Needed for tsx\n  root.find(j.ClassMethod, {\n    kind: `method`\n  }).replaceWith(path => {\n    if (EXCLUDE_METHODS.includes(path.value.key.name)) {\n      return path.value;\n    }\n    path.value.async = true;\n    return path.value;\n  });\n\n  // Set all function definitions to async if await is present\n  [`FunctionDeclaration`, `ArrowFunctionExpression`].forEach(name => {\n    root.find(j[name]).replaceWith(path => {\n      // Don't convert object literals\n      // e.g. const foo = () => ({ bar : 123 });\n      if (path.value.body.type === `ObjectExpression`) {\n        return path.value;\n      }\n\n      // For ArrowFunctionExpression don't do things like:\n      // describe()\n      // But do:\n      // const foo = () => {}\n      if (path.parent.value.type === `CallExpression`) {\n        return path.value;\n      }\n\n      // If function has already been wrapped in a Promise then don't do anything\n      if (path.parent.value.callee && path.parent.value.callee.name === `Promise`) {\n        return path.value;\n      }\n      path.value.async = true;\n      return path.value;\n    });\n  });\n  compilers.update(j, root, auto_compile_opts, opts);\n  return root.toSource(opts.printOptions);\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["compilers","require","EXTRA_COMMANDS","HOOKS","JS_BUILT_IN","EXCLUDE_OBJECTS","EXCLUDE_METHODS","AWAIT_CUSTOM_GETTERS","excludeAsyncWrap","path","excludes","parent_type","parent","value","type","includes","excludeAsyncCustom","test_object","name","callee","object","insideExecute","expression","argument","property","init","right","parentPath","module","exports","transformer","file","api","opts","j","jscodeshift","root","source","auto_compile_opts","remove","find","CallExpression","replaceWith","args","arguments","body","multiple_params","params","length","random","Math","floor","placeholder","left_placeholder","block_statement","declarator","placeholder_variable","callExpression","memberExpression","identifier","elements","arrayExpression","blockStatement","expressionStatement","variableDeclarator","properties","objectPattern","arrayPattern","reverse","for_statement","forOfStatement","variableDeclaration","varaible_declaration","program","forEach","index","async","checks","filter","word","callee_name","MemberExpression","object_start","charAt","toUpperCase","MethodDefinition","kind","key","ClassMethod","update","toSource","printOptions"],"sourceRoot":"C:\\Users\\myilvaganan.sekar.SUTRIXMEDIA1\\Bods-US\\sutrix-test-flow\\node_modules\\@wdio\\codemod\\async\\","sources":["index.js"],"sourcesContent":["const compilers = require(`../common/compilers`);\nconst {\n\tEXTRA_COMMANDS,\n\tHOOKS,\n\tJS_BUILT_IN,\n\tEXCLUDE_OBJECTS,\n\tEXCLUDE_METHODS,\n\tAWAIT_CUSTOM_GETTERS,\n } = require(`./constants`);\n\n// Exclude await if already await'ed, a return line or for of loop\nconst excludeAsyncWrap = path => {\n\tconst excludes    = [`AwaitExpression`, `ReturnStatement`, `ForOfStatement`];\n\tconst parent_type = path.parent.value.type;\n\n\tif(excludes.includes(parent_type)) {\n\t\treturn true;\n\t}\n}\n\n// Don't await certain functions and methods\nconst excludeAsyncCustom = test_object => {\n\tif(!test_object) {\n\t\treturn false;\n\t}\n\n\t// Add to this array when more come up\n\tif([`moment`].includes(test_object.name)) {\n\t\treturn true;\n\t}\n\n\treturn excludeAsyncCustom(test_object.callee || test_object.object);\n}\n\n// Checks if a parent node is browser.execute\nconst insideExecute = parent => {\n\tif(!parent || !parent.value) {\n\t\treturn false;\n\t}\n\n\tconst value = parent.value;\n\n\tif(\n\t\t// Plain browser.execute without the return value being assigned\n\t\t(\n\t\t\tvalue.expression &&\n\t\t\tvalue.expression.argument &&\n\t\t\tvalue.expression.argument.callee &&\n\t\t\tvalue.expression.argument.callee.object &&\n\t\t\tvalue.expression.argument.callee.object.name === `browser` &&\n\t\t\tvalue.expression.argument.callee.property.name === `execute`\n\t\t) ||\n\t\t// browser.execute with variable declarator\n\t\t// e.g. const foo = browser.execute();\n\t\t(\n\t\t\tvalue.type === `VariableDeclarator` &&\n\t\t\tvalue.init &&\n\t\t\tvalue.init.argument &&\n\t\t\tvalue.init.argument.callee &&\n\t\t\tvalue.init.argument.callee.object &&\n\t\t\tvalue.init.argument.callee.object.name === `browser` &&\n\t\t\tvalue.init.argument.callee.property.name === `execute`\n\t\t) ||\n\t\t// browser.execute with return\n\t\t(\n\t\t\tvalue.type === `ReturnStatement` &&\n\t\t\tvalue.argument &&\n\t\t\tvalue.argument.callee &&\n\t\t\tvalue.argument.callee.object &&\n\t\t\tvalue.argument.callee.object.name === `browser` &&\n\t\t\tvalue.argument.callee.property.name === `execute`\n\t\t) ||\n\t\t// With assignemnt but not declarating a variable\n\t\t// e.g. foo = browser.execute();\n\t\t(\n\t\t\tvalue.type === `AssignmentExpression` &&\n\t\t\tvalue.right.argument &&\n\t\t\tvalue.right.argument.callee &&\n\t\t\tvalue.right.argument.callee.object &&\n\t\t\tvalue.right.argument.callee.object.name === `browser` &&\n\t\t\tvalue.right.argument.callee.property.name === `execute`\n\t\t)\n\t) {\n\t\t\treturn true;\n\t}\n\n\tif(!parent.parentPath) {\n\t\treturn false;\n\t}\n\n\treturn insideExecute(parent.parentPath);\n}\n\nmodule.exports = function transformer(file, api, opts) {\n\tconst j                 = api.jscodeshift;\n\tconst root              = j(file.source);\n\tconst auto_compile_opts = compilers.remove(j, root, opts);\n\n\t// Convert forEach to regular for loops\n\troot.find(j.CallExpression, {\n\t\tcallee : {\n\t\t\tproperty : {\n\t\t\t\tname : \"forEach\"\n\t\t\t}\n\t\t}\n\t})\n\t.replaceWith(path => {\n\t\tconst args             = path.value.arguments[0];\n\t\tconst body             = args.body;\n\t\tconst multiple_params  = args.params && args.params.length > 1;\n\t\tconst random           = Math.floor(Math.random() * 10000);\n\t\tconst placeholder      = `codemod_placeholder_${random}`;\n\t\tconst left_placeholder = `left_placeholder_${random}`;\n\n\t\tlet expression      = null;\n\t\tlet block_statement = null;\n\t\tlet declarator      = null;\n\n\t\t// Check if we need to add an extra varaible above the for loop\n\t\t// Cases when $$() appears\n\t\t// AST explorer saw this as an error .. for await (const foo of $$(`.bar`))\n\t\tlet placeholder_variable = false;\n\n\t\t// foo.forEach()\n\t\tif(path.value.callee.object.name) {\n\t\t\tif(multiple_params) {\n\t\t\t\texpression = j.callExpression(\n\t\t\t\t\tj.memberExpression(\n\t\t\t\t\t\tpath.value.callee.object,\n\t\t\t\t\t\tj.identifier(`entries`)\n\t\t\t\t\t),\n\t\t\t\t\t[]\n\t\t\t\t);\n\t\t\t}\n\t\t\telse {\n\t\t\t\texpression = j.identifier(path.value.callee.object.name);\n\t\t\t}\n\t\t}\n\t\t// [1,3].forEach()\n\t\telse if(path.value.callee.object.elements) {\n\t\t\tif(multiple_params) {\n\t\t\t\texpression = j.callExpression(\n\t\t\t\t\tj.memberExpression(\n\t\t\t\t\t\tj.arrayExpression(path.value.callee.object.elements),\n\t\t\t\t\t\tj.identifier(`entries`)\n\t\t\t\t\t),\n\t\t\t\t\t[]\n\t\t\t\t);\n\t\t\t}\n\t\t\telse {\n\t\t\t\texpression = j.arrayExpression(path.value.callee.object.elements);\n\t\t\t}\n\t\t}\n\t\t// foo.bar.forEach()\n\t\t// @todo This could recurse to go deeper but not going to worry about it now\n\t\telse if(path.value.callee.object.object) {\n\t\t\tif(multiple_params) {\n\t\t\t\texpression = j.callExpression(\n\t\t\t\t\tj.memberExpression(\n\t\t\t\t\t\tpath.value.callee.object,\n\t\t\t\t\t\tj.identifier(`entries`)\n\t\t\t\t\t),\n\t\t\t\t\t[]\n\t\t\t\t);\n\t\t\t}\n\t\t\telse {\n\t\t\t\texpression = j.memberExpression(path.value.callee.object.object, path.value.callee.object.property);\n\t\t\t}\n\t\t}\n\t\t// $$(`.foo`).forEach() or abc.abs(1,6).forEach()\n\t\telse {\n\t\t\tplaceholder_variable = true;\n\t\t\tif(multiple_params) {\n\t\t\t\texpression = j.callExpression(\n\t\t\t\t\tj.memberExpression(\n\t\t\t\t\t\tj.identifier(placeholder),\n\t\t\t\t\t\tj.identifier(`entries`)\n\t\t\t\t\t),\n\t\t\t\t\t[]\n\t\t\t\t);\n\t\t\t}\n\t\t\telse {\n\t\t\t\texpression = j.identifier(placeholder);\n\t\t\t}\n\t\t}\n\n\t\t// foo.forEach(bar());\n\t\tif(!body) {\n\t\t\tblock_statement = j.blockStatement(\n\t\t\t\t[j.expressionStatement(path.value.arguments[0])]\n\t\t\t);\n\t\t}\n\t\t// General forEach\n\t\telse if(body.type === `BlockStatement`) {\n\t\t\tblock_statement = body;\n\t\t}\n\t\t// foo.forEach(num => num) single line forEach\n\t\telse {\n\t\t\tblock_statement = j.blockStatement(\n\t\t\t\t[j.expressionStatement(body)]\n\t\t\t)\n\t\t}\n\n\t\t// foo.forEach(bar());\n\t\tif(!args.params) {\n\t\t\tdeclarator = [\n\t\t\t\tj.variableDeclarator(\n\t\t\t\t\tj.identifier(`foo`),\n\t\t\t\t\tnull\n\t\t\t\t)\n\t\t\t]\n\t\t}\n\t\t// Array of objects\n\t\telse if(args.params[0] && args.params[0].properties) {\n\t\t\tdeclarator = [\n\t\t\t\tj.variableDeclarator(\n\t\t\t\t\tj.objectPattern(\n\t\t\t\t\t\targs.params[0].properties\n\t\t\t\t\t),\n\t\t\t\t\tnull\n\t\t\t\t)\n\t\t\t]\n\t\t}\n\t\t// [1,2].forEach((num, index) => console.log(num, index)});\n\t\t// Reverse the order of the arguments in forEach so the match what is used in .entries()\n\t\telse if(multiple_params) {\n\t\t\tdeclarator = [j.variableDeclarator(\n\t\t\t\tj.arrayPattern(args.params.reverse())\n\t\t\t)];\n\t\t}\n\t\t// Anything else\n\t\telse {\n\t\t\tdeclarator = args.params;\n\t\t}\n\n\t\tconst for_statement = j.forOfStatement(\n\t\t\tj.variableDeclaration(\n\t\t\t\t\"const\",\n\t\t\t\tdeclarator.length ? declarator : [j.identifier(left_placeholder)]\n\t\t\t),\n\t\t\texpression,\n\t\t\tblock_statement\n\t\t);\n\n\t\tif(placeholder_variable) {\n\t\t\tconst varaible_declaration = j.variableDeclaration(\n\t\t\t\t'let',\n\t\t\t\t[\n\t\t\t\t\tj.variableDeclarator(\n\t\t\t\t\t\tj.identifier(placeholder),\n\t\t\t\t\t\tpath.value.callee.object\n\t\t\t\t\t)\n\t\t\t\t]\n\t\t\t);\n\n\t\t\treturn j.program(\n\t\t\t\t[\n\t\t\t\t\tvaraible_declaration,\n\t\t\t\t\tfor_statement\n\t\t\t\t]\n\t\t\t);\n\t\t}\n\n\t\treturn for_statement;\n\t});\n\n\t// Transforms all hooks/it's parameter to async\n\tHOOKS.forEach(name => {\n\t\troot.find(j.CallExpression, {\n\t\t\tcallee : {\n\t\t\t\tname\n\t\t\t}\n\t\t}).replaceWith(path => {\n\t\t\tconst index = [`it`, `xit`, `test`, `describe`, `xdescribe`, `When`, `Given`, `Then`, `Before`, `BeforeStep`].includes(name) ? 1 : 0;\n\t\t\tif(path.value.arguments[index] && path.value.arguments[index].type === `ArrowFunctionExpression`) {\n\t\t\t\tpath.value.arguments[index].async = true\n\t\t\t}\n\t\t\treturn path.value;\n\t\t});\n\t});\n\n\t// Wrap all .map in Promise.all\n\troot.find(j.CallExpression, {\n\t\tcallee : {\n\t\t\tproperty : {\n\t\t\t\tname : `map`\n\t\t\t}\n\t\t}\n\t}).replaceWith(path => {\n\t\t// If map has already been wrapped in a Promise then don't do anything\n\t\tif(\n\t\t\tpath.parent.value.callee &&\n\t\t\tpath.parent.value.callee.object &&\n\t\t\tpath.parent.value.callee.object.name === `Promise`\n\t\t) {\n\t\t\treturn path.value;\n\t\t}\n\n\t\tconst expression = j.callExpression(\n\t\t\tj.memberExpression(\n\t\t\t\tj.identifier(`Promise`),\n\t\t\t\tj.identifier(`all`)\n\t\t\t),\n\t\t\t[\n\t\t\t\tj.callExpression(\n\t\t\t\t\tpath.value.callee,\n\t\t\t\t\tpath.value.arguments\n\t\t\t\t)\n\t\t\t]\n\t\t);\n\n\t\treturn expression;\n\t});\n\n\t// Transform waitUnitl, map, etc.\n\tEXTRA_COMMANDS.forEach(name => {\n\t\troot.find(j.CallExpression, {\n\t\t\tcallee : {\n\t\t\t\tproperty : {\n\t\t\t\t\tname,\n\t\t\t\t}\n\t\t\t}\n\t\t}).replaceWith(path => {\n\t\t\t// Don't do\n\t\t\t// [...Array(num_users)].some(() => ({ ...options }));\n\t\t\tif(path.value.arguments[0].body && ![`ObjectExpression`].includes(path.value.arguments[0].body.type)) {\n\t\t\t\tpath.value.arguments[0].async = true;\n\t\t\t}\n\n\t\t\treturn path.value;\n\t\t});\n\t});\n\n\t// Handle $$\n\troot.find(j.CallExpression, {\n\t\tcallee : {\n\t\t\tname : `$$`,\n\t\t}\n\t}).replaceWith(path => {\n\t\tif(excludeAsyncWrap(path)) {\n\t\t\treturn path.value;\n\t\t}\n\n\t\treturn {\n\t\t\ttype     : `AwaitExpression`,\n\t\t\targument : path.value\n\t\t}\n\t});\n\n\t// Add await to all calls to class methods\n\t// This will handle chained methods\n\t// E.g. LoginPage.login()\n\t// @todo This could be too generic. It can pick up methods that don't need await on them\n\troot.find(j.CallExpression, {\n\t\tcallee : {\n\t\t\ttype : `MemberExpression`,\n\t\t\tproperty : {\n\t\t\t\ttype : `Identifier`,\n\t\t\t}\n\t\t}\n\t}).replaceWith(path => {\n\t\tif(excludeAsyncWrap(path) || insideExecute(path.parentPath)) {\n\t\t\treturn path.value;\n\t\t}\n\n\t\t// Need to make sure to include expect here\n\t\tconst checks = [...JS_BUILT_IN, ...EXCLUDE_OBJECTS, ...EXCLUDE_METHODS].filter(word => ![`expect`, `expectChai`].includes(word));\n\n\t\t// Exclude any built in javascipt functions\n\t\tif(checks.includes(path.value.callee.property.name) || checks.includes(path.value.callee.object.name)) {\n\t\t\treturn path.value;\n\t\t}\n\n\t\tif(\n\t\t\tpath.value.callee &&\n\t\t\tpath.value.callee.object.callee &&\n\t\t\tchecks.includes(path.value.callee.object.callee.name)\n\t\t) {\n\t\t\treturn path.value;\n\t\t}\n\n\t\t// Exclude certing things like moment\n\t\t// Examples below:\n\t\t// current_date = moment(current_date, `MM/DD/YYYY`).add(1, `days`).format(`MM/DD/YYYY`);\n\t\t// dates.push(moment(current_date, `MM/DD/YYYY`).format(format_to_return));\n\t\tif(excludeAsyncCustom(path.value.callee.object)) {\n\t\t\treturn path.value;\n\t\t}\n\n\t\treturn {\n\t\t\ttype     : `AwaitExpression`,\n\t\t\targument : path.value\n\t\t}\n\t});\n\n\t// foo();\n\troot.find(j.CallExpression, {\n\t\tcallee : {\n\t\t\ttype : `Identifier`,\n\t\t}\n\t}).replaceWith(path => {\n\t\tconst callee_name = path.value.callee.name;\n\t\tconst checks      = [...JS_BUILT_IN, ...EXCLUDE_OBJECTS, ...HOOKS, ...[`$`, `$$`]];\n\n\t\tif(\n\t\t\texcludeAsyncWrap(path) ||\n\t\t\tinsideExecute(path.parentPath) ||\n\t\t\tchecks.includes(callee_name)\n\t\t) {\n\t\t\treturn path.value;\n\t\t}\n\n\t\treturn {\n\t\t\ttype     : `AwaitExpression`,\n\t\t\targument : path.value\n\t\t}\n\t});\n\n\tAWAIT_CUSTOM_GETTERS.forEach(name => {\n\t\troot.find(j.MemberExpression, {\n\t\t\tproperty : {\n\t\t\t\tname\n\t\t\t}\n\t\t}).replaceWith(path => {\n\t\t\tif(!path.value.object.name || excludeAsyncWrap(path)) {\n\t\t\t\treturn path.value;\n\t\t\t}\n\n\t\t\tconst object_start = path.value.object.name.charAt(0);\n\n\t\t\t// Check that the object starts with an uppercase character\n\t\t\t// If it's not uppercase it's likely not what we want\n\t\t\tif(object_start !== object_start.toUpperCase()) {\n\t\t\t\treturn path.value;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\ttype     : `AwaitExpression`,\n\t\t\t\targument : path.value\n\t\t\t}\n\t\t});\n\t});\n\n\troot.find(j.MemberExpression, {\n\t\tproperty : {\n\t\t\tname : `selector`\n\t\t}\n\t}).replaceWith(path => {\n\t\tif(\n\t\t\texcludeAsyncWrap(path) ||\n\t\t\t(\n\t\t\t\t// Don't convert things like this.selector since it's likely not what we're looking for\n\t\t\t\tpath.value.object && path.value.object.type === `ThisExpression`)\n\t\t\t) {\n\t\t\treturn path.value;\n\t\t}\n\n\t\treturn {\n\t\t\ttype : `AwaitExpression`,\n\t\t\targument : path.value\n\t\t}\n\t});\n\n\t// Set all method definitions to async. excludes \"get\", \"set\"\n\troot.find(j.MethodDefinition, {\n\t\tkind : `method`\n\t}).replaceWith(path => {\n\t\tif(EXCLUDE_METHODS.includes(path.value.key.name)) {\n\t\t\treturn path.value;\n\t\t}\n\t\tpath.value.value.async = true;\n\t\treturn path.value;\n\t});\n\n\t// Set all method definitions to async. excludes \"get\", \"set\"\n\t// Needed for tsx\n\troot.find(j.ClassMethod, {\n\t\tkind : `method`\n\t}).replaceWith(path => {\n\t\tif(EXCLUDE_METHODS.includes(path.value.key.name)) {\n\t\t\treturn path.value;\n\t\t}\n\t\tpath.value.async = true;\n\n\t\treturn path.value;\n\t});\n\n\t// Set all function definitions to async if await is present\n\t[`FunctionDeclaration`, `ArrowFunctionExpression`].forEach(name => {\n\t\troot.find(j[name]).replaceWith(path => {\n\t\t\t// Don't convert object literals\n\t\t\t// e.g. const foo = () => ({ bar : 123 });\n\t\t\tif(path.value.body.type === `ObjectExpression`) {\n\t\t\t\treturn path.value;\n\t\t\t}\n\n\t\t\t// For ArrowFunctionExpression don't do things like:\n\t\t\t// describe()\n\t\t\t// But do:\n\t\t\t// const foo = () => {}\n\t\t\tif(path.parent.value.type === `CallExpression`) {\n\t\t\t\treturn path.value;\n\t\t\t}\n\n\t\t\t// If function has already been wrapped in a Promise then don't do anything\n\t\t\tif(\n\t\t\t\tpath.parent.value.callee &&\n\t\t\t\tpath.parent.value.callee.name === `Promise`\n\t\t\t) {\n\t\t\t\treturn path.value;\n\t\t\t}\n\n\t\t\t\n\t\t\tpath.value.async = true;\n\n\t\t\treturn path.value;\n\t\t});\n\t});\n\n\tcompilers.update(j, root, auto_compile_opts, opts);\n\n\treturn root.toSource(opts.printOptions);\n}\n"],"mappings":"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"}},"mtime":1690904986169},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\myilvaganan.sekar.SUTRIXMEDIA1\\\\Bods-US\\\\sutrix-test-flow\\\\node_modules\\\\@wdio\\\\codemod\\\\common\\\\\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\myilvaganan.sekar.SUTRIXMEDIA1\\\\Bods-US\\\\sutrix-test-flow\",\"filename\":\"C:\\\\Users\\\\myilvaganan.sekar.SUTRIXMEDIA1\\\\Bods-US\\\\sutrix-test-flow\\\\node_modules\\\\@wdio\\\\codemod\\\\common\\\\compilers.js\",\"targets\":{},\"cloneInputAst\":true,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\myilvaganan.sekar.SUTRIXMEDIA1\\\\Bods-US\\\\sutrix-test-flow\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{},\"externalDependencies\":[]},{\"key\":\"transform-flow-strip-types\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]},\"ImportDeclaration\":{\"enter\":[null,null]},\"ClassPrivateProperty\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"TypeCastExpression\":{\"enter\":[null,null]},\"CallExpression\":{\"enter\":[null]},\"OptionalCallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"ImportSpecifier\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"AnyTypeAnnotation\":{\"enter\":[null]},\"ArrayTypeAnnotation\":{\"enter\":[null]},\"BooleanTypeAnnotation\":{\"enter\":[null]},\"BooleanLiteralTypeAnnotation\":{\"enter\":[null]},\"NullLiteralTypeAnnotation\":{\"enter\":[null]},\"ClassImplements\":{\"enter\":[null]},\"DeclareClass\":{\"enter\":[null]},\"DeclareFunction\":{\"enter\":[null]},\"DeclareInterface\":{\"enter\":[null]},\"DeclareModule\":{\"enter\":[null]},\"DeclareModuleExports\":{\"enter\":[null]},\"DeclareTypeAlias\":{\"enter\":[null]},\"DeclareOpaqueType\":{\"enter\":[null]},\"DeclareVariable\":{\"enter\":[null]},\"DeclareExportDeclaration\":{\"enter\":[null]},\"DeclareExportAllDeclaration\":{\"enter\":[null]},\"DeclaredPredicate\":{\"enter\":[null]},\"ExistsTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeParam\":{\"enter\":[null]},\"GenericTypeAnnotation\":{\"enter\":[null]},\"InferredPredicate\":{\"enter\":[null]},\"InterfaceExtends\":{\"enter\":[null]},\"InterfaceDeclaration\":{\"enter\":[null]},\"InterfaceTypeAnnotation\":{\"enter\":[null]},\"IntersectionTypeAnnotation\":{\"enter\":[null]},\"MixedTypeAnnotation\":{\"enter\":[null]},\"EmptyTypeAnnotation\":{\"enter\":[null]},\"NullableTypeAnnotation\":{\"enter\":[null]},\"NumberLiteralTypeAnnotation\":{\"enter\":[null]},\"NumberTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeInternalSlot\":{\"enter\":[null]},\"ObjectTypeCallProperty\":{\"enter\":[null]},\"ObjectTypeIndexer\":{\"enter\":[null]},\"ObjectTypeProperty\":{\"enter\":[null]},\"ObjectTypeSpreadProperty\":{\"enter\":[null]},\"OpaqueType\":{\"enter\":[null]},\"QualifiedTypeIdentifier\":{\"enter\":[null]},\"StringLiteralTypeAnnotation\":{\"enter\":[null]},\"StringTypeAnnotation\":{\"enter\":[null]},\"SymbolTypeAnnotation\":{\"enter\":[null]},\"ThisTypeAnnotation\":{\"enter\":[null]},\"TupleTypeAnnotation\":{\"enter\":[null]},\"TypeofTypeAnnotation\":{\"enter\":[null]},\"TypeAlias\":{\"enter\":[null]},\"TypeAnnotation\":{\"enter\":[null]},\"TypeParameter\":{\"enter\":[null]},\"TypeParameterDeclaration\":{\"enter\":[null]},\"TypeParameterInstantiation\":{\"enter\":[null]},\"UnionTypeAnnotation\":{\"enter\":[null]},\"Variance\":{\"enter\":[null]},\"VoidTypeAnnotation\":{\"enter\":[null]},\"EnumDeclaration\":{\"enter\":[null]},\"EnumBooleanBody\":{\"enter\":[null]},\"EnumNumberBody\":{\"enter\":[null]},\"EnumStringBody\":{\"enter\":[null]},\"EnumSymbolBody\":{\"enter\":[null]},\"EnumBooleanMember\":{\"enter\":[null]},\"EnumNumberMember\":{\"enter\":[null]},\"EnumStringMember\":{\"enter\":[null]},\"EnumDefaultedMember\":{\"enter\":[null]},\"IndexedAccessType\":{\"enter\":[null]},\"OptionalIndexedAccessType\":{\"enter\":[null]},\"ExportAllDeclaration\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"syntax-class-static-block\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-private-property-in-object\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-class-properties\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-numeric-separator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-nullish-coalescing-operator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-chaining\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.21.4:development":{"value":{"code":"\"use strict\";\n\nconst {\n  OBSOLETE_REQUIRE_MODULES,\n  COMPILER_OPTS_MAPPING\n} = require('./constants');\nconst {\n  isStringLiteral\n} = require('./utils');\nexports.remove = function removeCompilers(j, root, opts) {\n  const autoCompileOpts = {};\n\n  /**\n   * remove compiler requires\n   */\n  root.find(opts.parser === 'babel' ? j.Property : j.ObjectProperty).filter(path => path.value.key && (path.value.key.name === 'require' || path.value.key.name === 'requires' || path.value.key.name === 'requireModule')).replaceWith(path => {\n    return j.objectProperty(j.identifier(path.value.key.name), j.arrayExpression(path.value.value.elements.filter(value => {\n      let importName;\n      if (isStringLiteral(value)) {\n        importName = value.value;\n      } else if (value.type === 'ArrayExpression') {\n        importName = value.elements[0].value;\n        if (!Object.keys(COMPILER_OPTS_MAPPING).includes(importName)) {\n          return true;\n        }\n        autoCompileOpts[COMPILER_OPTS_MAPPING[importName]] = value.elements[1].properties;\n      } else {\n        return true;\n      }\n      return !OBSOLETE_REQUIRE_MODULES.includes(importName);\n    })));\n  });\n\n  /**\n   * fetch compiler require calls within function blocks\n   */\n  root.find(j.ExpressionStatement, {\n    expression: {\n      callee: {\n        object: {\n          callee: {\n            name: 'require'\n          }\n        }\n      }\n    }\n  }).filter(path => Object.keys(COMPILER_OPTS_MAPPING).map(c => c.split('/')[0]).includes(path.value.expression.callee.object.arguments.length && path.value.expression.callee.object.arguments[0].value)).replaceWith(path => {\n    const compiler = path.value.expression.callee.object.arguments[0].value;\n    autoCompileOpts[COMPILER_OPTS_MAPPING[`${compiler}/register`]] = path.value.expression.arguments[0].properties;\n  });\n  root.find(j.ExpressionStatement, {\n    expression: {\n      callee: {\n        callee: {\n          name: 'require'\n        }\n      }\n    }\n  }).filter(path => Object.keys(COMPILER_OPTS_MAPPING).includes(path.value.expression.callee.arguments[0].value)).replaceWith(path => {\n    const compiler = path.value.expression.callee.arguments[0].value;\n    const module = compiler.startsWith('@') || compiler === 'babel-register' ? compiler : `${compiler}/register`;\n    autoCompileOpts[COMPILER_OPTS_MAPPING[module]] = path.value.expression.arguments[0].properties;\n    return [];\n  });\n  root.find(j.ArrowFunctionExpression, {\n    body: {\n      callee: {\n        callee: {\n          name: 'require'\n        }\n      }\n    }\n  }).filter(path => Object.keys(COMPILER_OPTS_MAPPING).map(c => c.startsWith('@') ? c : c.split('/')[0]).includes(path.value.body.callee.arguments.length && path.value.body.callee.arguments[0].value)).replaceWith(path => {\n    const compiler = path.value.body.callee.arguments[0].value;\n    const module = compiler.startsWith('@') ? compiler : `${compiler}/register`;\n    autoCompileOpts[COMPILER_OPTS_MAPPING[module]] = path.value.body.arguments[0].properties;\n    return [];\n  });\n  return autoCompileOpts;\n};\nexports.update = function (j, root, autoCompileOpts, opts) {\n  /**\n   * update config with compiler opts\n   */\n  let wasInserted = false;\n  root.find(opts.parser === 'babel' ? j.Property : j.ObjectProperty).filter(path => path.value.key && (path.value.key.name === 'capabilities' || path.value.key.name === 'framework')).forEach(path => {\n    if (wasInserted) {\n      return;\n    }\n    wasInserted = true;\n    path.parentPath.value.push(...(Object.keys(autoCompileOpts).length ? [j.objectProperty(j.identifier('autoCompileOpts'), j.objectExpression([j.property('init', j.identifier('autoCompile'), j.literal(true)), ...Object.entries(autoCompileOpts).map(([propName, properties]) => j.property('init', j.identifier(propName), j.objectExpression(properties)))]))] : []));\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["OBSOLETE_REQUIRE_MODULES","COMPILER_OPTS_MAPPING","require","isStringLiteral","exports","remove","removeCompilers","j","root","opts","autoCompileOpts","find","parser","Property","ObjectProperty","filter","path","value","key","name","replaceWith","objectProperty","identifier","arrayExpression","elements","importName","type","Object","keys","includes","properties","ExpressionStatement","expression","callee","object","map","c","split","arguments","length","compiler","module","startsWith","ArrowFunctionExpression","body","update","wasInserted","forEach","parentPath","push","objectExpression","property","literal","entries","propName"],"sourceRoot":"C:\\Users\\myilvaganan.sekar.SUTRIXMEDIA1\\Bods-US\\sutrix-test-flow\\node_modules\\@wdio\\codemod\\common\\","sources":["compilers.js"],"sourcesContent":["const {\n    OBSOLETE_REQUIRE_MODULES,\n    COMPILER_OPTS_MAPPING\n} = require('./constants')\n\nconst { isStringLiteral } = require('./utils')\n\nexports.remove = function removeCompilers (j, root, opts) {\n    const autoCompileOpts = {}\n\n    /**\n     * remove compiler requires\n     */\n    root.find(opts.parser === 'babel' ? j.Property : j.ObjectProperty)\n        .filter((path) => (\n            path.value.key && (\n                path.value.key.name === 'require' ||\n                path.value.key.name === 'requires' ||\n                path.value.key.name === 'requireModule'\n            )\n        ))\n        .replaceWith((path) => {\n            return j.objectProperty(\n                j.identifier(path.value.key.name),\n                j.arrayExpression(path.value.value.elements.filter((value) => {\n                    let importName\n\n                    if (isStringLiteral(value)) {\n                        importName = value.value\n                    } else if (value.type === 'ArrayExpression') {\n                        importName = value.elements[0].value\n                        if (!Object.keys(COMPILER_OPTS_MAPPING).includes(importName)) {\n                            return true\n                        }\n                        autoCompileOpts[COMPILER_OPTS_MAPPING[importName]] = value.elements[1].properties\n                    } else {\n                        return true\n                    }\n                    return !OBSOLETE_REQUIRE_MODULES.includes(importName)\n                }))\n            )\n        })\n\n    /**\n     * fetch compiler require calls within function blocks\n     */\n    root.find(j.ExpressionStatement, {\n        expression: {\n            callee: { object: { callee: { name: 'require' } } }\n        }\n    }).filter((path) => (\n        Object.keys(COMPILER_OPTS_MAPPING).map((c) => c.split('/')[0]).includes(\n            path.value.expression.callee.object.arguments.length &&\n            path.value.expression.callee.object.arguments[0].value\n        )\n    )).replaceWith((path) => {\n        const compiler = path.value.expression.callee.object.arguments[0].value\n        autoCompileOpts[COMPILER_OPTS_MAPPING[`${compiler}/register`]] = path.value.expression.arguments[0].properties\n    })\n    root.find(j.ExpressionStatement, {\n        expression: { callee: {\n            callee: { name: 'require' }\n        } }\n    }).filter((path) => (\n        Object.keys(COMPILER_OPTS_MAPPING).includes(path.value.expression.callee.arguments[0].value)\n    )).replaceWith((path) => {\n        const compiler = path.value.expression.callee.arguments[0].value\n        const module = compiler.startsWith('@') || compiler === 'babel-register' ? compiler : `${compiler}/register`\n        autoCompileOpts[COMPILER_OPTS_MAPPING[module]] = path.value.expression.arguments[0].properties\n        return []\n    })\n    root.find(j.ArrowFunctionExpression, {\n        body: {\n            callee: { callee: { name: 'require' } }\n        }\n    }).filter((path) => (\n        Object.keys(COMPILER_OPTS_MAPPING).map((c) => c.startsWith('@') ? c : c.split('/')[0]).includes(\n            path.value.body.callee.arguments.length &&\n            path.value.body.callee.arguments[0].value\n        )\n    )).replaceWith((path) => {\n        const compiler = path.value.body.callee.arguments[0].value\n        const module = compiler.startsWith('@') ? compiler : `${compiler}/register`\n        autoCompileOpts[COMPILER_OPTS_MAPPING[module]] = path.value.body.arguments[0].properties\n        return []\n    })\n\n    return autoCompileOpts\n}\n\nexports.update = function (j, root, autoCompileOpts, opts) {\n    /**\n     * update config with compiler opts\n     */\n    let wasInserted = false\n    root.find(opts.parser === 'babel' ? j.Property : j.ObjectProperty)\n        .filter((path) => (\n            path.value.key && (\n                path.value.key.name === 'capabilities' ||\n                path.value.key.name === 'framework'\n            )\n        ))\n        .forEach((path) => {\n            if (wasInserted) {\n                return\n            }\n            wasInserted = true\n            path.parentPath.value.push(\n                ...(Object.keys(autoCompileOpts).length\n                    ? [j.objectProperty(\n                        j.identifier('autoCompileOpts'),\n                        j.objectExpression([\n                            j.property(\n                                'init',\n                                j.identifier('autoCompile'),\n                                j.literal(true)\n                            ),\n                            ...Object.entries(autoCompileOpts).map(([propName, properties]) => j.property(\n                                'init',\n                                j.identifier(propName),\n                                j.objectExpression(properties)\n                            ))\n                        ])\n                    )]\n                    : []\n                )\n            )\n        })\n}\n"],"mappings":"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"}},"mtime":1690904984818},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\myilvaganan.sekar.SUTRIXMEDIA1\\\\Bods-US\\\\sutrix-test-flow\\\\node_modules\\\\@wdio\\\\codemod\\\\common\\\\\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\myilvaganan.sekar.SUTRIXMEDIA1\\\\Bods-US\\\\sutrix-test-flow\",\"filename\":\"C:\\\\Users\\\\myilvaganan.sekar.SUTRIXMEDIA1\\\\Bods-US\\\\sutrix-test-flow\\\\node_modules\\\\@wdio\\\\codemod\\\\common\\\\constants.js\",\"targets\":{},\"cloneInputAst\":true,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\myilvaganan.sekar.SUTRIXMEDIA1\\\\Bods-US\\\\sutrix-test-flow\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{},\"externalDependencies\":[]},{\"key\":\"transform-flow-strip-types\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]},\"ImportDeclaration\":{\"enter\":[null,null]},\"ClassPrivateProperty\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"TypeCastExpression\":{\"enter\":[null,null]},\"CallExpression\":{\"enter\":[null]},\"OptionalCallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"ImportSpecifier\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"AnyTypeAnnotation\":{\"enter\":[null]},\"ArrayTypeAnnotation\":{\"enter\":[null]},\"BooleanTypeAnnotation\":{\"enter\":[null]},\"BooleanLiteralTypeAnnotation\":{\"enter\":[null]},\"NullLiteralTypeAnnotation\":{\"enter\":[null]},\"ClassImplements\":{\"enter\":[null]},\"DeclareClass\":{\"enter\":[null]},\"DeclareFunction\":{\"enter\":[null]},\"DeclareInterface\":{\"enter\":[null]},\"DeclareModule\":{\"enter\":[null]},\"DeclareModuleExports\":{\"enter\":[null]},\"DeclareTypeAlias\":{\"enter\":[null]},\"DeclareOpaqueType\":{\"enter\":[null]},\"DeclareVariable\":{\"enter\":[null]},\"DeclareExportDeclaration\":{\"enter\":[null]},\"DeclareExportAllDeclaration\":{\"enter\":[null]},\"DeclaredPredicate\":{\"enter\":[null]},\"ExistsTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeParam\":{\"enter\":[null]},\"GenericTypeAnnotation\":{\"enter\":[null]},\"InferredPredicate\":{\"enter\":[null]},\"InterfaceExtends\":{\"enter\":[null]},\"InterfaceDeclaration\":{\"enter\":[null]},\"InterfaceTypeAnnotation\":{\"enter\":[null]},\"IntersectionTypeAnnotation\":{\"enter\":[null]},\"MixedTypeAnnotation\":{\"enter\":[null]},\"EmptyTypeAnnotation\":{\"enter\":[null]},\"NullableTypeAnnotation\":{\"enter\":[null]},\"NumberLiteralTypeAnnotation\":{\"enter\":[null]},\"NumberTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeInternalSlot\":{\"enter\":[null]},\"ObjectTypeCallProperty\":{\"enter\":[null]},\"ObjectTypeIndexer\":{\"enter\":[null]},\"ObjectTypeProperty\":{\"enter\":[null]},\"ObjectTypeSpreadProperty\":{\"enter\":[null]},\"OpaqueType\":{\"enter\":[null]},\"QualifiedTypeIdentifier\":{\"enter\":[null]},\"StringLiteralTypeAnnotation\":{\"enter\":[null]},\"StringTypeAnnotation\":{\"enter\":[null]},\"SymbolTypeAnnotation\":{\"enter\":[null]},\"ThisTypeAnnotation\":{\"enter\":[null]},\"TupleTypeAnnotation\":{\"enter\":[null]},\"TypeofTypeAnnotation\":{\"enter\":[null]},\"TypeAlias\":{\"enter\":[null]},\"TypeAnnotation\":{\"enter\":[null]},\"TypeParameter\":{\"enter\":[null]},\"TypeParameterDeclaration\":{\"enter\":[null]},\"TypeParameterInstantiation\":{\"enter\":[null]},\"UnionTypeAnnotation\":{\"enter\":[null]},\"Variance\":{\"enter\":[null]},\"VoidTypeAnnotation\":{\"enter\":[null]},\"EnumDeclaration\":{\"enter\":[null]},\"EnumBooleanBody\":{\"enter\":[null]},\"EnumNumberBody\":{\"enter\":[null]},\"EnumStringBody\":{\"enter\":[null]},\"EnumSymbolBody\":{\"enter\":[null]},\"EnumBooleanMember\":{\"enter\":[null]},\"EnumNumberMember\":{\"enter\":[null]},\"EnumStringMember\":{\"enter\":[null]},\"EnumDefaultedMember\":{\"enter\":[null]},\"IndexedAccessType\":{\"enter\":[null]},\"OptionalIndexedAccessType\":{\"enter\":[null]},\"ExportAllDeclaration\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"syntax-class-static-block\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-private-property-in-object\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-class-properties\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-numeric-separator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-nullish-coalescing-operator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-chaining\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.21.4:development":{"value":{"code":"\"use strict\";\n\nexports.OBSOLETE_REQUIRE_MODULES = ['@babel/register', 'babel-register', 'ts-node/register', 'tsconfig-paths/register'];\nexports.COMPILER_OPTS_MAPPING = {\n  '@babel/register': 'babelOpts',\n  'babel-register': 'babelOpts',\n  'ts-node/register': 'tsNodeOpts',\n  'tsconfig-paths/register': 'tsConfigPathsOpts'\n};\nexports.ELEMENT_COMMANDS = ['$$', '$', 'addValue', 'clearValue', 'click', 'custom$$', 'custom$', 'doubleClick', 'dragAndDrop', 'getAttribute', 'getCSSProperty', 'getComputedRole', 'getComputedLabel', 'getHTML', 'getLocation', 'getProperty', 'getSize', 'getTagName', 'getText', 'getValue', 'isClickable', 'isDisplayed', 'isDisplayedInViewport', 'isEnabled', 'isEqual', 'isExisting', 'isFocused', 'isSelected', 'moveTo', 'nextElement', 'parentElement', 'previousElement', 'react$$', 'react$', 'saveScreenshot', 'scrollIntoView', 'selectByAttribute', 'selectByIndex', 'selectByVisibleText', 'setValue', 'shadow$$', 'shadow$', 'touchAction', 'waitForClickable', 'waitForDisplayed', 'waitForEnabled', 'waitForExist', 'waitUntil'];\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJleHBvcnRzIiwiT0JTT0xFVEVfUkVRVUlSRV9NT0RVTEVTIiwiQ09NUElMRVJfT1BUU19NQVBQSU5HIiwiRUxFTUVOVF9DT01NQU5EUyJdLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxteWlsdmFnYW5hbi5zZWthci5TVVRSSVhNRURJQTFcXEJvZHMtVVNcXHN1dHJpeC10ZXN0LWZsb3dcXG5vZGVfbW9kdWxlc1xcQHdkaW9cXGNvZGVtb2RcXGNvbW1vblxcIiwic291cmNlcyI6WyJjb25zdGFudHMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0cy5PQlNPTEVURV9SRVFVSVJFX01PRFVMRVMgPSBbXG4gICAgJ0BiYWJlbC9yZWdpc3RlcicsXG4gICAgJ2JhYmVsLXJlZ2lzdGVyJyxcbiAgICAndHMtbm9kZS9yZWdpc3RlcicsXG4gICAgJ3RzY29uZmlnLXBhdGhzL3JlZ2lzdGVyJ1xuXVxuXG5leHBvcnRzLkNPTVBJTEVSX09QVFNfTUFQUElORyA9IHtcbiAgICAnQGJhYmVsL3JlZ2lzdGVyJzogJ2JhYmVsT3B0cycsXG4gICAgJ2JhYmVsLXJlZ2lzdGVyJzogJ2JhYmVsT3B0cycsXG4gICAgJ3RzLW5vZGUvcmVnaXN0ZXInOiAndHNOb2RlT3B0cycsXG4gICAgJ3RzY29uZmlnLXBhdGhzL3JlZ2lzdGVyJzogJ3RzQ29uZmlnUGF0aHNPcHRzJ1xufVxuXG5leHBvcnRzLkVMRU1FTlRfQ09NTUFORFMgPSBbXG4gICAgJyQkJyxcbiAgICAnJCcsXG4gICAgJ2FkZFZhbHVlJyxcbiAgICAnY2xlYXJWYWx1ZScsXG4gICAgJ2NsaWNrJyxcbiAgICAnY3VzdG9tJCQnLFxuICAgICdjdXN0b20kJyxcbiAgICAnZG91YmxlQ2xpY2snLFxuICAgICdkcmFnQW5kRHJvcCcsXG4gICAgJ2dldEF0dHJpYnV0ZScsXG4gICAgJ2dldENTU1Byb3BlcnR5JyxcbiAgICAnZ2V0Q29tcHV0ZWRSb2xlJyxcbiAgICAnZ2V0Q29tcHV0ZWRMYWJlbCcsXG4gICAgJ2dldEhUTUwnLFxuICAgICdnZXRMb2NhdGlvbicsXG4gICAgJ2dldFByb3BlcnR5JyxcbiAgICAnZ2V0U2l6ZScsXG4gICAgJ2dldFRhZ05hbWUnLFxuICAgICdnZXRUZXh0JyxcbiAgICAnZ2V0VmFsdWUnLFxuICAgICdpc0NsaWNrYWJsZScsXG4gICAgJ2lzRGlzcGxheWVkJyxcbiAgICAnaXNEaXNwbGF5ZWRJblZpZXdwb3J0JyxcbiAgICAnaXNFbmFibGVkJyxcbiAgICAnaXNFcXVhbCcsXG4gICAgJ2lzRXhpc3RpbmcnLFxuICAgICdpc0ZvY3VzZWQnLFxuICAgICdpc1NlbGVjdGVkJyxcbiAgICAnbW92ZVRvJyxcbiAgICAnbmV4dEVsZW1lbnQnLFxuICAgICdwYXJlbnRFbGVtZW50JyxcbiAgICAncHJldmlvdXNFbGVtZW50JyxcbiAgICAncmVhY3QkJCcsXG4gICAgJ3JlYWN0JCcsXG4gICAgJ3NhdmVTY3JlZW5zaG90JyxcbiAgICAnc2Nyb2xsSW50b1ZpZXcnLFxuICAgICdzZWxlY3RCeUF0dHJpYnV0ZScsXG4gICAgJ3NlbGVjdEJ5SW5kZXgnLFxuICAgICdzZWxlY3RCeVZpc2libGVUZXh0JyxcbiAgICAnc2V0VmFsdWUnLFxuICAgICdzaGFkb3ckJCcsXG4gICAgJ3NoYWRvdyQnLFxuICAgICd0b3VjaEFjdGlvbicsXG4gICAgJ3dhaXRGb3JDbGlja2FibGUnLFxuICAgICd3YWl0Rm9yRGlzcGxheWVkJyxcbiAgICAnd2FpdEZvckVuYWJsZWQnLFxuICAgICd3YWl0Rm9yRXhpc3QnLFxuICAgICd3YWl0VW50aWwnLFxuXVxuIl0sIm1hcHBpbmdzIjoiOztBQUFBQSxPQUFPLENBQUNDLHdCQUF3QixHQUFHLENBQy9CLGlCQUFpQixFQUNqQixnQkFBZ0IsRUFDaEIsa0JBQWtCLEVBQ2xCLHlCQUF5QixDQUM1QjtBQUVERCxPQUFPLENBQUNFLHFCQUFxQixHQUFHO0VBQzVCLGlCQUFpQixFQUFFLFdBQVc7RUFDOUIsZ0JBQWdCLEVBQUUsV0FBVztFQUM3QixrQkFBa0IsRUFBRSxZQUFZO0VBQ2hDLHlCQUF5QixFQUFFO0FBQy9CLENBQUM7QUFFREYsT0FBTyxDQUFDRyxnQkFBZ0IsR0FBRyxDQUN2QixJQUFJLEVBQ0osR0FBRyxFQUNILFVBQVUsRUFDVixZQUFZLEVBQ1osT0FBTyxFQUNQLFVBQVUsRUFDVixTQUFTLEVBQ1QsYUFBYSxFQUNiLGFBQWEsRUFDYixjQUFjLEVBQ2QsZ0JBQWdCLEVBQ2hCLGlCQUFpQixFQUNqQixrQkFBa0IsRUFDbEIsU0FBUyxFQUNULGFBQWEsRUFDYixhQUFhLEVBQ2IsU0FBUyxFQUNULFlBQVksRUFDWixTQUFTLEVBQ1QsVUFBVSxFQUNWLGFBQWEsRUFDYixhQUFhLEVBQ2IsdUJBQXVCLEVBQ3ZCLFdBQVcsRUFDWCxTQUFTLEVBQ1QsWUFBWSxFQUNaLFdBQVcsRUFDWCxZQUFZLEVBQ1osUUFBUSxFQUNSLGFBQWEsRUFDYixlQUFlLEVBQ2YsaUJBQWlCLEVBQ2pCLFNBQVMsRUFDVCxRQUFRLEVBQ1IsZ0JBQWdCLEVBQ2hCLGdCQUFnQixFQUNoQixtQkFBbUIsRUFDbkIsZUFBZSxFQUNmLHFCQUFxQixFQUNyQixVQUFVLEVBQ1YsVUFBVSxFQUNWLFNBQVMsRUFDVCxhQUFhLEVBQ2Isa0JBQWtCLEVBQ2xCLGtCQUFrQixFQUNsQixnQkFBZ0IsRUFDaEIsY0FBYyxFQUNkLFdBQVcsQ0FDZCJ9","map":{"version":3,"names":["exports","OBSOLETE_REQUIRE_MODULES","COMPILER_OPTS_MAPPING","ELEMENT_COMMANDS"],"sourceRoot":"C:\\Users\\myilvaganan.sekar.SUTRIXMEDIA1\\Bods-US\\sutrix-test-flow\\node_modules\\@wdio\\codemod\\common\\","sources":["constants.js"],"sourcesContent":["exports.OBSOLETE_REQUIRE_MODULES = [\n    '@babel/register',\n    'babel-register',\n    'ts-node/register',\n    'tsconfig-paths/register'\n]\n\nexports.COMPILER_OPTS_MAPPING = {\n    '@babel/register': 'babelOpts',\n    'babel-register': 'babelOpts',\n    'ts-node/register': 'tsNodeOpts',\n    'tsconfig-paths/register': 'tsConfigPathsOpts'\n}\n\nexports.ELEMENT_COMMANDS = [\n    '$$',\n    '$',\n    'addValue',\n    'clearValue',\n    'click',\n    'custom$$',\n    'custom$',\n    'doubleClick',\n    'dragAndDrop',\n    'getAttribute',\n    'getCSSProperty',\n    'getComputedRole',\n    'getComputedLabel',\n    'getHTML',\n    'getLocation',\n    'getProperty',\n    'getSize',\n    'getTagName',\n    'getText',\n    'getValue',\n    'isClickable',\n    'isDisplayed',\n    'isDisplayedInViewport',\n    'isEnabled',\n    'isEqual',\n    'isExisting',\n    'isFocused',\n    'isSelected',\n    'moveTo',\n    'nextElement',\n    'parentElement',\n    'previousElement',\n    'react$$',\n    'react$',\n    'saveScreenshot',\n    'scrollIntoView',\n    'selectByAttribute',\n    'selectByIndex',\n    'selectByVisibleText',\n    'setValue',\n    'shadow$$',\n    'shadow$',\n    'touchAction',\n    'waitForClickable',\n    'waitForDisplayed',\n    'waitForEnabled',\n    'waitForExist',\n    'waitUntil',\n]\n"],"mappings":";;AAAAA,OAAO,CAACC,wBAAwB,GAAG,CAC/B,iBAAiB,EACjB,gBAAgB,EAChB,kBAAkB,EAClB,yBAAyB,CAC5B;AAEDD,OAAO,CAACE,qBAAqB,GAAG;EAC5B,iBAAiB,EAAE,WAAW;EAC9B,gBAAgB,EAAE,WAAW;EAC7B,kBAAkB,EAAE,YAAY;EAChC,yBAAyB,EAAE;AAC/B,CAAC;AAEDF,OAAO,CAACG,gBAAgB,GAAG,CACvB,IAAI,EACJ,GAAG,EACH,UAAU,EACV,YAAY,EACZ,OAAO,EACP,UAAU,EACV,SAAS,EACT,aAAa,EACb,aAAa,EACb,cAAc,EACd,gBAAgB,EAChB,iBAAiB,EACjB,kBAAkB,EAClB,SAAS,EACT,aAAa,EACb,aAAa,EACb,SAAS,EACT,YAAY,EACZ,SAAS,EACT,UAAU,EACV,aAAa,EACb,aAAa,EACb,uBAAuB,EACvB,WAAW,EACX,SAAS,EACT,YAAY,EACZ,WAAW,EACX,YAAY,EACZ,QAAQ,EACR,aAAa,EACb,eAAe,EACf,iBAAiB,EACjB,SAAS,EACT,QAAQ,EACR,gBAAgB,EAChB,gBAAgB,EAChB,mBAAmB,EACnB,eAAe,EACf,qBAAqB,EACrB,UAAU,EACV,UAAU,EACV,SAAS,EACT,aAAa,EACb,kBAAkB,EAClB,kBAAkB,EAClB,gBAAgB,EAChB,cAAc,EACd,WAAW,CACd"}},"mtime":1690904985543},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\myilvaganan.sekar.SUTRIXMEDIA1\\\\Bods-US\\\\sutrix-test-flow\\\\node_modules\\\\@wdio\\\\codemod\\\\common\\\\\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\myilvaganan.sekar.SUTRIXMEDIA1\\\\Bods-US\\\\sutrix-test-flow\",\"filename\":\"C:\\\\Users\\\\myilvaganan.sekar.SUTRIXMEDIA1\\\\Bods-US\\\\sutrix-test-flow\\\\node_modules\\\\@wdio\\\\codemod\\\\common\\\\utils.js\",\"targets\":{},\"cloneInputAst\":true,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\myilvaganan.sekar.SUTRIXMEDIA1\\\\Bods-US\\\\sutrix-test-flow\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{},\"externalDependencies\":[]},{\"key\":\"transform-flow-strip-types\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]},\"ImportDeclaration\":{\"enter\":[null,null]},\"ClassPrivateProperty\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"TypeCastExpression\":{\"enter\":[null,null]},\"CallExpression\":{\"enter\":[null]},\"OptionalCallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"ImportSpecifier\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"AnyTypeAnnotation\":{\"enter\":[null]},\"ArrayTypeAnnotation\":{\"enter\":[null]},\"BooleanTypeAnnotation\":{\"enter\":[null]},\"BooleanLiteralTypeAnnotation\":{\"enter\":[null]},\"NullLiteralTypeAnnotation\":{\"enter\":[null]},\"ClassImplements\":{\"enter\":[null]},\"DeclareClass\":{\"enter\":[null]},\"DeclareFunction\":{\"enter\":[null]},\"DeclareInterface\":{\"enter\":[null]},\"DeclareModule\":{\"enter\":[null]},\"DeclareModuleExports\":{\"enter\":[null]},\"DeclareTypeAlias\":{\"enter\":[null]},\"DeclareOpaqueType\":{\"enter\":[null]},\"DeclareVariable\":{\"enter\":[null]},\"DeclareExportDeclaration\":{\"enter\":[null]},\"DeclareExportAllDeclaration\":{\"enter\":[null]},\"DeclaredPredicate\":{\"enter\":[null]},\"ExistsTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeParam\":{\"enter\":[null]},\"GenericTypeAnnotation\":{\"enter\":[null]},\"InferredPredicate\":{\"enter\":[null]},\"InterfaceExtends\":{\"enter\":[null]},\"InterfaceDeclaration\":{\"enter\":[null]},\"InterfaceTypeAnnotation\":{\"enter\":[null]},\"IntersectionTypeAnnotation\":{\"enter\":[null]},\"MixedTypeAnnotation\":{\"enter\":[null]},\"EmptyTypeAnnotation\":{\"enter\":[null]},\"NullableTypeAnnotation\":{\"enter\":[null]},\"NumberLiteralTypeAnnotation\":{\"enter\":[null]},\"NumberTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeInternalSlot\":{\"enter\":[null]},\"ObjectTypeCallProperty\":{\"enter\":[null]},\"ObjectTypeIndexer\":{\"enter\":[null]},\"ObjectTypeProperty\":{\"enter\":[null]},\"ObjectTypeSpreadProperty\":{\"enter\":[null]},\"OpaqueType\":{\"enter\":[null]},\"QualifiedTypeIdentifier\":{\"enter\":[null]},\"StringLiteralTypeAnnotation\":{\"enter\":[null]},\"StringTypeAnnotation\":{\"enter\":[null]},\"SymbolTypeAnnotation\":{\"enter\":[null]},\"ThisTypeAnnotation\":{\"enter\":[null]},\"TupleTypeAnnotation\":{\"enter\":[null]},\"TypeofTypeAnnotation\":{\"enter\":[null]},\"TypeAlias\":{\"enter\":[null]},\"TypeAnnotation\":{\"enter\":[null]},\"TypeParameter\":{\"enter\":[null]},\"TypeParameterDeclaration\":{\"enter\":[null]},\"TypeParameterInstantiation\":{\"enter\":[null]},\"UnionTypeAnnotation\":{\"enter\":[null]},\"Variance\":{\"enter\":[null]},\"VoidTypeAnnotation\":{\"enter\":[null]},\"EnumDeclaration\":{\"enter\":[null]},\"EnumBooleanBody\":{\"enter\":[null]},\"EnumNumberBody\":{\"enter\":[null]},\"EnumStringBody\":{\"enter\":[null]},\"EnumSymbolBody\":{\"enter\":[null]},\"EnumBooleanMember\":{\"enter\":[null]},\"EnumNumberMember\":{\"enter\":[null]},\"EnumStringMember\":{\"enter\":[null]},\"EnumDefaultedMember\":{\"enter\":[null]},\"IndexedAccessType\":{\"enter\":[null]},\"OptionalIndexedAccessType\":{\"enter\":[null]},\"ExportAllDeclaration\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"syntax-class-static-block\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-private-property-in-object\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-class-properties\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-numeric-separator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-nullish-coalescing-operator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-chaining\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.21.4:development":{"value":{"code":"\"use strict\";\n\nfunction isStringLiteral(val) {\n  return ['Literal', 'StringLiteral'].includes(val.type);\n}\nfunction isNumericalLiteral(val) {\n  return ['Literal', 'NumericLiteral'].includes(val.type);\n}\nmodule.exports = {\n  isStringLiteral,\n  isNumericalLiteral\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJpc1N0cmluZ0xpdGVyYWwiLCJ2YWwiLCJpbmNsdWRlcyIsInR5cGUiLCJpc051bWVyaWNhbExpdGVyYWwiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXG15aWx2YWdhbmFuLnNla2FyLlNVVFJJWE1FRElBMVxcQm9kcy1VU1xcc3V0cml4LXRlc3QtZmxvd1xcbm9kZV9tb2R1bGVzXFxAd2Rpb1xcY29kZW1vZFxcY29tbW9uXFwiLCJzb3VyY2VzIjpbInV0aWxzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIGlzU3RyaW5nTGl0ZXJhbCAodmFsKSB7XG4gICAgcmV0dXJuIFsnTGl0ZXJhbCcsICdTdHJpbmdMaXRlcmFsJ10uaW5jbHVkZXModmFsLnR5cGUpXG59XG5cbmZ1bmN0aW9uIGlzTnVtZXJpY2FsTGl0ZXJhbCAodmFsKSB7XG4gICAgcmV0dXJuIFsnTGl0ZXJhbCcsICdOdW1lcmljTGl0ZXJhbCddLmluY2x1ZGVzKHZhbC50eXBlKVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgICBpc1N0cmluZ0xpdGVyYWwsXG4gICAgaXNOdW1lcmljYWxMaXRlcmFsXG59XG4iXSwibWFwcGluZ3MiOiI7O0FBQUEsU0FBU0EsZUFBZUEsQ0FBRUMsR0FBRyxFQUFFO0VBQzNCLE9BQU8sQ0FBQyxTQUFTLEVBQUUsZUFBZSxDQUFDLENBQUNDLFFBQVEsQ0FBQ0QsR0FBRyxDQUFDRSxJQUFJLENBQUM7QUFDMUQ7QUFFQSxTQUFTQyxrQkFBa0JBLENBQUVILEdBQUcsRUFBRTtFQUM5QixPQUFPLENBQUMsU0FBUyxFQUFFLGdCQUFnQixDQUFDLENBQUNDLFFBQVEsQ0FBQ0QsR0FBRyxDQUFDRSxJQUFJLENBQUM7QUFDM0Q7QUFFQUUsTUFBTSxDQUFDQyxPQUFPLEdBQUc7RUFDYk4sZUFBZTtFQUNmSTtBQUNKLENBQUMifQ==","map":{"version":3,"names":["isStringLiteral","val","includes","type","isNumericalLiteral","module","exports"],"sourceRoot":"C:\\Users\\myilvaganan.sekar.SUTRIXMEDIA1\\Bods-US\\sutrix-test-flow\\node_modules\\@wdio\\codemod\\common\\","sources":["utils.js"],"sourcesContent":["function isStringLiteral (val) {\n    return ['Literal', 'StringLiteral'].includes(val.type)\n}\n\nfunction isNumericalLiteral (val) {\n    return ['Literal', 'NumericLiteral'].includes(val.type)\n}\n\nmodule.exports = {\n    isStringLiteral,\n    isNumericalLiteral\n}\n"],"mappings":";;AAAA,SAASA,eAAeA,CAAEC,GAAG,EAAE;EAC3B,OAAO,CAAC,SAAS,EAAE,eAAe,CAAC,CAACC,QAAQ,CAACD,GAAG,CAACE,IAAI,CAAC;AAC1D;AAEA,SAASC,kBAAkBA,CAAEH,GAAG,EAAE;EAC9B,OAAO,CAAC,SAAS,EAAE,gBAAgB,CAAC,CAACC,QAAQ,CAACD,GAAG,CAACE,IAAI,CAAC;AAC3D;AAEAE,MAAM,CAACC,OAAO,GAAG;EACbN,eAAe;EACfI;AACJ,CAAC"}},"mtime":1690904986643},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\myilvaganan.sekar.SUTRIXMEDIA1\\\\Bods-US\\\\sutrix-test-flow\\\\node_modules\\\\@wdio\\\\codemod\\\\async\\\\\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\myilvaganan.sekar.SUTRIXMEDIA1\\\\Bods-US\\\\sutrix-test-flow\",\"filename\":\"C:\\\\Users\\\\myilvaganan.sekar.SUTRIXMEDIA1\\\\Bods-US\\\\sutrix-test-flow\\\\node_modules\\\\@wdio\\\\codemod\\\\async\\\\constants.js\",\"targets\":{},\"cloneInputAst\":true,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\myilvaganan.sekar.SUTRIXMEDIA1\\\\Bods-US\\\\sutrix-test-flow\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{},\"externalDependencies\":[]},{\"key\":\"transform-flow-strip-types\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]},\"ImportDeclaration\":{\"enter\":[null,null]},\"ClassPrivateProperty\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"TypeCastExpression\":{\"enter\":[null,null]},\"CallExpression\":{\"enter\":[null]},\"OptionalCallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"ImportSpecifier\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"AnyTypeAnnotation\":{\"enter\":[null]},\"ArrayTypeAnnotation\":{\"enter\":[null]},\"BooleanTypeAnnotation\":{\"enter\":[null]},\"BooleanLiteralTypeAnnotation\":{\"enter\":[null]},\"NullLiteralTypeAnnotation\":{\"enter\":[null]},\"ClassImplements\":{\"enter\":[null]},\"DeclareClass\":{\"enter\":[null]},\"DeclareFunction\":{\"enter\":[null]},\"DeclareInterface\":{\"enter\":[null]},\"DeclareModule\":{\"enter\":[null]},\"DeclareModuleExports\":{\"enter\":[null]},\"DeclareTypeAlias\":{\"enter\":[null]},\"DeclareOpaqueType\":{\"enter\":[null]},\"DeclareVariable\":{\"enter\":[null]},\"DeclareExportDeclaration\":{\"enter\":[null]},\"DeclareExportAllDeclaration\":{\"enter\":[null]},\"DeclaredPredicate\":{\"enter\":[null]},\"ExistsTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeParam\":{\"enter\":[null]},\"GenericTypeAnnotation\":{\"enter\":[null]},\"InferredPredicate\":{\"enter\":[null]},\"InterfaceExtends\":{\"enter\":[null]},\"InterfaceDeclaration\":{\"enter\":[null]},\"InterfaceTypeAnnotation\":{\"enter\":[null]},\"IntersectionTypeAnnotation\":{\"enter\":[null]},\"MixedTypeAnnotation\":{\"enter\":[null]},\"EmptyTypeAnnotation\":{\"enter\":[null]},\"NullableTypeAnnotation\":{\"enter\":[null]},\"NumberLiteralTypeAnnotation\":{\"enter\":[null]},\"NumberTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeInternalSlot\":{\"enter\":[null]},\"ObjectTypeCallProperty\":{\"enter\":[null]},\"ObjectTypeIndexer\":{\"enter\":[null]},\"ObjectTypeProperty\":{\"enter\":[null]},\"ObjectTypeSpreadProperty\":{\"enter\":[null]},\"OpaqueType\":{\"enter\":[null]},\"QualifiedTypeIdentifier\":{\"enter\":[null]},\"StringLiteralTypeAnnotation\":{\"enter\":[null]},\"StringTypeAnnotation\":{\"enter\":[null]},\"SymbolTypeAnnotation\":{\"enter\":[null]},\"ThisTypeAnnotation\":{\"enter\":[null]},\"TupleTypeAnnotation\":{\"enter\":[null]},\"TypeofTypeAnnotation\":{\"enter\":[null]},\"TypeAlias\":{\"enter\":[null]},\"TypeAnnotation\":{\"enter\":[null]},\"TypeParameter\":{\"enter\":[null]},\"TypeParameterDeclaration\":{\"enter\":[null]},\"TypeParameterInstantiation\":{\"enter\":[null]},\"UnionTypeAnnotation\":{\"enter\":[null]},\"Variance\":{\"enter\":[null]},\"VoidTypeAnnotation\":{\"enter\":[null]},\"EnumDeclaration\":{\"enter\":[null]},\"EnumBooleanBody\":{\"enter\":[null]},\"EnumNumberBody\":{\"enter\":[null]},\"EnumStringBody\":{\"enter\":[null]},\"EnumSymbolBody\":{\"enter\":[null]},\"EnumBooleanMember\":{\"enter\":[null]},\"EnumNumberMember\":{\"enter\":[null]},\"EnumStringMember\":{\"enter\":[null]},\"EnumDefaultedMember\":{\"enter\":[null]},\"IndexedAccessType\":{\"enter\":[null]},\"OptionalIndexedAccessType\":{\"enter\":[null]},\"ExportAllDeclaration\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"syntax-class-static-block\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-private-property-in-object\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-class-properties\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-numeric-separator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-nullish-coalescing-operator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-chaining\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.21.4:development":{"value":{"code":"\"use strict\";\n\nexports.HOOKS = [`it`, `xit`, `before`, `beforeEach`, `after`, `afterEach`, `suite`, `test`, `When`, `Given`, `Then`, `After`, `Before`, `BeforeStep`];\n\n// Commands here will have async added to them\nexports.EXTRA_COMMANDS = [`waitUntil`, `map`];\n\n// Store any of your getters here that need to be await'd\n// e.g. for things like $$(`.foo)\n// Adding them here will add await in front of the call where it needs to be\nexports.AWAIT_CUSTOM_GETTERS = [];\n\n// Exclude adding async / await to any methods in your local code\n// Add to this based on the needs of your app\n// Add only the method name here\n// Don't need to add the class name at all.\n// If there are same name methods across classes the code could be modified to take that into account but not a big deal\nexports.EXCLUDE_METHODS = [];\n\n// Exclude any custom objects to not await on\nexports.EXCLUDE_OBJECTS = [`moment`, `queryString`, `query_string`, `Array`, `Number`, `String`, `Object`, `path`, `util`, `fs`, `require`, `describe`, `xdescribe`, `expect`, `expectChai`];\n\n// Don't await on built in js functions/methods\nexports.JS_BUILT_IN = [`Error`, `includes`, `trim`, `trimStart`, `trimEnd`, `constructor`, `toExponential`, `toFixed`, `toLocaleString`, `toPrecision`, `toString`, `valueOf`, `toSource`, `toString`, `valueOf`, `charAt`, `charCodeAt`, `concat`, `indexOf`, `lastIndexOf`, `localeCompare`, `length`, `match`, `replace`, `search`, `slice`, `split`, `substr`, `substring`, `toLocaleLowerCase`, `toLocaleUpperCase`, `toLowerCase`, `toString`, `toUpperCase`, `valueOf`, `anchor`, `big`, `blink`, `bold`, `fixed`, `fontcolor`, `fontsize`, `italics`, `link`, `small`, `strike`, `sub`, `sup`, `concat`, `every`, `filter`, `forEach`, `indexOf`, `join`, `lastIndexOf`, `map`, `pop`, `push`, `reduce`, `reduceRight`, `reverse`, `shift`, `slice`, `some`, `toSource`, `sort`, `splice`, `toString`, `unshift`, `Date`, `getDate`, `getDay`, `getFullYear`, `getHours`, `getMilliseconds`, `getMinutes`, `getMonth`, `getSeconds`, `getTime`, `getTimezoneOffset`, `getUTCDate`, `getUTCDay`, `getUTCFullYear`, `getUTCHours`, `getUTCMilliseconds`, `getUTCMinutes`, `getUTCMonth`, `getUTCSeconds`, `getYear`, `setDate`, `setFullYear`, `setHours`, `setMilliseconds`, `setMinutes`, `setMonth`, `setSeconds`, `setTime`, `setUTCDate`, `setUTCFullYear`, `setUTCHours`, `setUTCMilliseconds`, `setUTCMinutes`, `setUTCMonth`, `setUTCSeconds`, `setYear`, `toDateString`, `toGMTString`, `toLocaleDateString`, `toLocaleFormat`, `toLocaleString`, `toLocaleTimeString`, `toSource`, `toString`, `toTimeString`, `toUTCString`, `DateTimeFormat`, `format`, `valueOf`, `abs`, `acos`, `asin`, `atan`, `atan2`, `ceil`, `cos`, `exp`, `floor`, `log`, `error`, `max`, `min`, `pow`, `random`, `round`, `sin`, `sqrt`, `tan`, `toSource`, `exec`, `test`, `toSource`, `toString`, `parse`, `parseInt`, `parseFloat`, `isNaN`, `cwd`, `find`, `findIndex`, `stringify`, `resolve`, `resolve2`, `addAttachment`, `addDescription`, `encodeURIComponent`, `decodeURIComponent`, `base64Sync`, `readFileSync`, `writeFileSync`, `existsSync`, `querySelector`, `fromFile`, `then`, `request`, `from`, `merge`, `get`];\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["exports","HOOKS","EXTRA_COMMANDS","AWAIT_CUSTOM_GETTERS","EXCLUDE_METHODS","EXCLUDE_OBJECTS","JS_BUILT_IN"],"sourceRoot":"C:\\Users\\myilvaganan.sekar.SUTRIXMEDIA1\\Bods-US\\sutrix-test-flow\\node_modules\\@wdio\\codemod\\async\\","sources":["constants.js"],"sourcesContent":["exports.HOOKS = [\n\t`it`,\n\t`xit`,\n\t`before`,\n\t`beforeEach`,\n\t`after`,\n\t`afterEach`,\n\t`suite`,\n\t`test`,\n\t`When`,\n\t`Given`,\n\t`Then`,\n\t`After`,\n\t`Before`,\n\t`BeforeStep`,\n];\n\n// Commands here will have async added to them\nexports.EXTRA_COMMANDS = [\n\t`waitUntil`,\n\t`map`,\n];\n\n// Store any of your getters here that need to be await'd\n// e.g. for things like $$(`.foo)\n// Adding them here will add await in front of the call where it needs to be\nexports.AWAIT_CUSTOM_GETTERS = [];\n\n// Exclude adding async / await to any methods in your local code\n// Add to this based on the needs of your app\n// Add only the method name here\n// Don't need to add the class name at all.\n// If there are same name methods across classes the code could be modified to take that into account but not a big deal\nexports.EXCLUDE_METHODS = [];\n\n// Exclude any custom objects to not await on\nexports.EXCLUDE_OBJECTS = [\n\t`moment`,\n\t`queryString`,\n\t`query_string`,\n\t`Array`,\n\t`Number`,\n\t`String`,\n\t`Object`,\n\t`path`,\n\t`util`,\n\t`fs`,\n\t`require`,\n\t`describe`,\n\t`xdescribe`,\n\t`expect`,\n\t`expectChai`,\n];\n\n// Don't await on built in js functions/methods\nexports.JS_BUILT_IN = [\n\t`Error`,\n\t`includes`,\n\t`trim`,\n\t`trimStart`,\n\t`trimEnd`,\n\t`constructor`,\n\t`toExponential`,\n\t`toFixed`,\n\t`toLocaleString`,\n\t`toPrecision`,\n\t`toString`,\n\t`valueOf`,\n\t`toSource`,\n\t`toString`,\n\t`valueOf`,\n\t`charAt`,\n\t`charCodeAt`,\n\t`concat`,\n\t`indexOf`,\n\t`lastIndexOf`,\n\t`localeCompare`,\n\t`length`,\n\t`match`,\n\t`replace`,\n\t`search`,\n\t`slice`,\n\t`split`,\n\t`substr`,\n\t`substring`,\n\t`toLocaleLowerCase`,\n\t`toLocaleUpperCase`,\n\t`toLowerCase`,\n\t`toString`,\n\t`toUpperCase`,\n\t`valueOf`,\n\t`anchor`,\n\t`big`,\n\t`blink`,\n\t`bold`,\n\t`fixed`,\n\t`fontcolor`,\n\t`fontsize`,\n\t`italics`,\n\t`link`,\n\t`small`,\n\t`strike`,\n\t`sub`,\n\t`sup`,\n\t`concat`,\n\t`every`,\n\t`filter`,\n\t`forEach`,\n\t`indexOf`,\n\t`join`,\n\t`lastIndexOf`,\n\t`map`,\n\t`pop`,\n\t`push`,\n\t`reduce`,\n\t`reduceRight`,\n\t`reverse`,\n\t`shift`,\n\t`slice`,\n\t`some`,\n\t`toSource`,\n\t`sort`,\n\t`splice`,\n\t`toString`,\n\t`unshift`,\n\t`Date`,\n\t`getDate`,\n\t`getDay`,\n\t`getFullYear`,\n\t`getHours`,\n\t`getMilliseconds`,\n\t`getMinutes`,\n\t`getMonth`,\n\t`getSeconds`,\n\t`getTime`,\n\t`getTimezoneOffset`,\n\t`getUTCDate`,\n\t`getUTCDay`,\n\t`getUTCFullYear`,\n\t`getUTCHours`,\n\t`getUTCMilliseconds`,\n\t`getUTCMinutes`,\n\t`getUTCMonth`,\n\t`getUTCSeconds`,\n\t`getYear`,\n\t`setDate`,\n\t`setFullYear`,\n\t`setHours`,\n\t`setMilliseconds`,\n\t`setMinutes`,\n\t`setMonth`,\n\t`setSeconds`,\n\t`setTime`,\n\t`setUTCDate`,\n\t`setUTCFullYear`,\n\t`setUTCHours`,\n\t`setUTCMilliseconds`,\n\t`setUTCMinutes`,\n\t`setUTCMonth`,\n\t`setUTCSeconds`,\n\t`setYear`,\n\t`toDateString`,\n\t`toGMTString`,\n\t`toLocaleDateString`,\n\t`toLocaleFormat`,\n\t`toLocaleString`,\n\t`toLocaleTimeString`,\n\t`toSource`,\n\t`toString`,\n\t`toTimeString`,\n\t`toUTCString`,\n\t`DateTimeFormat`,\n\t`format`,\t\n\t`valueOf`,\n\t`abs`,\n\t`acos`,\n\t`asin`,\n\t`atan`,\n\t`atan2`,\n\t`ceil`,\n\t`cos`,\n\t`exp`,\n\t`floor`,\n\t`log`,\n\t`error`,\n\t`max`,\n\t`min`,\n\t`pow`,\n\t`random`,\n\t`round`,\n\t`sin`,\n\t`sqrt`,\n\t`tan`,\n\t`toSource`,\n\t`exec`,\n\t`test`,\n\t`toSource`,\n\t`toString`,\n\t`parse`,\n\t`parseInt`,\n\t`parseFloat`,\n\t`isNaN`,\n\t`cwd`,\n\t`find`,\n\t`findIndex`,\n\t`stringify`,\n\t`resolve`,\n\t`resolve2`,\n\t`addAttachment`,\n    `addDescription`,\n\t`encodeURIComponent`,\n\t`decodeURIComponent`,\n\t`base64Sync`,\n\t`readFileSync`,\n\t`writeFileSync`,\n\t`existsSync`,\n\t`querySelector`,\n\t`fromFile`,\n\t`then`,\n\t`request`,\n\t`from`,\n\t`merge`,\n\t`get`,\n];\n"],"mappings":"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"}},"mtime":1690904985178}}